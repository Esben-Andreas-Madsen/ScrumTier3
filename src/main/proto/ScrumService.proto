syntax = "proto3";
option java_multiple_files = true;
package dk.via.scrum;

////////////////////////////////////////////////////////////

message UserRequest{
  int32 UserId = 1;
}
message UserResponse{
  int32 UserId = 1;
  string UserName = 2;
  string Password = 3;
  string Role = 4;
  string FirstName = 5;
  string LastName = 6;
}

message AllUsersRequest{

}

message NewUserRequest{
  string UserName = 1;
  string Password = 2;
  string Role = 3;
  string FirstName = 4;
  string LastName = 5;
}

////////////////////////////////////////////////////////////

message SuccessResponse{
}

////////////////////////////////////////////////////////////

message UserStoryRequest{
  int32 UserStoryId = 1;
}
message UserStoryResponse{
  int32 UserStoryId = 1;
  int32 UserId = 2;
  string Title = 3;
  string Description = 4;
}

message AllUserStoriesRequest {

}

////////////////////////////////////////////////////////////

message NewUserStoryRequest{
  int32 UserId = 1;
  string Title = 2;
  string Description = 3;
}

////////////////////////////////////////////////////////////

message BacklogRequest {
  string BacklogName = 1;
}

message BacklogResponse {
  string BacklogName = 1;
  int32  UserStoryId = 2;
  int32 UserId = 3;
}

message NewBacklogRequest {
  string BacklogName = 1;
  int32 UserId = 2;
}

message AllBacklogsRequest {

}

message AssignUserStoryToBacklog {
  string BacklogName = 1;
  int32 UserStoryId = 2;
  int32 UserId = 3;
}

////////////////////////////////////////////////////////////



service ScrumService {
  rpc getUser(UserRequest) returns (UserResponse);
  rpc createUser(NewUserRequest) returns (SuccessResponse);
  rpc getAllUsers(AllUsersRequest) returns (stream UserResponse);

  rpc getUserStoryById(UserStoryRequest) returns (UserStoryResponse);
  rpc createUserStory(NewUserStoryRequest) returns (SuccessResponse);
  rpc getAllUserStories(AllUserStoriesRequest) returns (stream UserStoryResponse);

  rpc getBacklog(BacklogRequest) returns (stream BacklogResponse);
  rpc createBacklog(NewBacklogRequest) returns (SuccessResponse);
  rpc getAllBacklogs(AllBacklogsRequest) returns (stream BacklogResponse);
  rpc assignUserStory(AssignUserStoryToBacklog) returns (SuccessResponse);
}